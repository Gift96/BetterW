#import "_Pr0_Utils.h"


/* WARNING
* The things that start with $def or $use ARE NOT comments, but preprocess instructions.
* These instructions are used by PreProcessor.py to replace, basically being a macro that is runned before Logos.
* 
* Maybe it's too late for my soul.
*/


$def pp_class(a, b): \
@interface !a : !b \
@end

$def pp_classView(a): $use pp_class(!a, UIView)

$def pp_hookBackgroundColor(a): \
-(void)setBackgroundColor:(id)arg1 { \
    return %orig(!a); \
} \
-(id)backgroundColor { \
    return !a; \
}

$def pp_hookViewColor(a, b): \
%hook !a \
    $use pp_hookBackgroundColor(!b) \
%end

$def pp_hookView(a): $use pp_hookViewColor(!a, [UIColor blackColor])

$def pp_defAndHookColor(a, b): \
$use pp_classView(!a) \
$use pp_hookViewColor(!a, !b)

$def pp_defAndHook(a): $use pp_defAndHookColor(!a, [UIColor blackColor])


$use pp_defAndHookColor(_UIBarBackground, [UIColor colorWithWhite:0.10 alpha:1.0])
$use pp_defAndHookColor(_WADividerCellBackground, [UIColor grayColor])
$use pp_defAndHookColor(WABadgedLabel, [UIColor clearColor])

$use pp_defAndHook(_WACustomBehaviorsTableView)
$use pp_defAndHook(_WADraggableInputContainerView)
$use pp_defAndHook(WAMessageBubbleForwardButton)
$use pp_defAndHook(WATabBar)

$use pp_hookView(UISearchBar)
$use pp_hookView(UITableView)
$use pp_hookView(UITableViewCell)



$use pp_classView(_UINavigationBarLargeTitleView)
%hook _UINavigationBarLargeTitleView
    -(void)layoutSubviews {
        %orig;
        if (self.subviews.count > 0) {
            [self.subviews[0] setTextColor:[UIColor whiteColor]];
        }
    }
%end


@interface WAContactNameLabel
- (void)setColor:(id)arg1;
@end

%hook WAContactNameLabel
- (void)setColor:(id)arg1 {
    return %orig([UIColor whiteColor]);
}
%end




@interface UILabel (pr0crustes)
    // these 2 methods are from https://gist.github.com/snikch/3661188 .
    - (UIViewController *)pr0crustes_topViewController;
    - (UIViewController *)pr0crustes_topViewController:(UIViewController *)rootViewController;

    -(bool)pr0crustes_isInAlert;
@end


%hook UILabel
    $use pp_hookBackgroundColor([UIColor clearColor])

    %new   // This method is from https://gist.github.com/snikch/3661188 .
    - (UIViewController *)pr0crustes_topViewController{
            return [self pr0crustes_topViewController:[UIApplication sharedApplication].keyWindow.rootViewController];
    }

    %new   // This method is from https://gist.github.com/snikch/3661188 .
    - (UIViewController *)pr0crustes_topViewController:(UIViewController *)rootViewController {
        if (rootViewController.presentedViewController == nil) {
            return rootViewController;
        }
        
        if ([rootViewController.presentedViewController isKindOfClass:[UINavigationController class]]) {
            UINavigationController *navigationController = (UINavigationController *) rootViewController.presentedViewController;
            UIViewController *lastViewController = [[navigationController viewControllers] lastObject];
            return [self pr0crustes_topViewController:lastViewController];
        }
        
        UIViewController *presentedViewController = (UIViewController *) rootViewController.presentedViewController;
        return [self pr0crustes_topViewController:presentedViewController];
    }

    %new
    -(bool)pr0crustes_isInAlert {
        return [[self pr0crustes_topViewController] isKindOfClass:[UIAlertController class]];
    }

    -(void)setTextColor:(id)arg1 {
        if ([self pr0crustes_isInAlert]) {
            return %orig;
        }
        return %orig([UIColor whiteColor]);
    }
    -(id)textColor {
        if ([self pr0crustes_isInAlert]) {
            return %orig;
        }
        return [UIColor whiteColor];
    }
%end


%hook UINavigationController
    -(void)viewDidLoad {
        %orig;
        NSDictionary *attributes = @{
            NSForegroundColorAttributeName: [UIColor whiteColor]
        };
        [self.navigationBar setTitleTextAttributes:attributes];
    }
%end



%ctor {
    if (FUNCTION_prefGetBool(@"pref_dark_mode")) {
        FUNCTION_logEnabling(@"Dark Mode");
        %init(_ungrouped);
    }
}
